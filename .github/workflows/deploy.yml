# .github/workflows/deploy.yml

name: Deploy PHP and Java to GCP VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    # ===================================================================
    #              환경 변수 설정 (Configuration)
    # ===================================================================
    env:
      # PHP 관련 경로
      PHP_SRC_PATH: ./html
      PHP_TARGET_PATH: /var/www/html

      # Java 관련 경로 및 이름
      JAVA_PROJECT_DIR: ./tcp
      JAVA_TARGET_PATH: /opt
      JAVA_JAR_NAME: java-tcp-server-1.0.0.jar
      JAVA_SERVICE_NAME: java-tcp-server.service

    steps:
      # 1. 소스 코드 체크아웃
      # ----------------------------------------------------
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2. PHP 환경 설정 및 테스트 영역
      # ----------------------------------------------------
      - name: Setup PHP environment
        if: contains(github.event.head_commit.message, '[php]')
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: (Placeholder) Install PHP Dependencies & Run Tests
        if: contains(github.event.head_commit.message, '[php]')
        run: |
          echo "PHP 테스트 영역입니다."

      # 3. Java (JDK) 환경 설정 및 빌드
      # ----------------------------------------------------
      - name: Setup JDK 17
        if: contains(github.event.head_commit.message, '[java]')
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Java application with Gradle
        if: contains(github.event.head_commit.message, '[java]')
        working-directory: ${{ env.JAVA_PROJECT_DIR }}
        run: |
          chmod +x ./gradlew
          ./gradlew build

      - name: (Placeholder) Run Java Tests
        if: contains(github.event.head_commit.message, '[java]')
        working-directory: ${{ env.JAVA_PROJECT_DIR }}
        run: |
          echo "Java 테스트 영역입니다."

      - name: Check build artifacts
        if: contains(github.event.head_commit.message, '[java]')
        run: |
          echo "Listing all files in the workspace..."
          ls -R

      # 4. GCP VM으로 배포
      # ----------------------------------------------------
      - name: Deploy PHP files via SCP
        if: contains(github.event.head_commit.message, '[php]')
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "${{ env.PHP_SRC_PATH }}/*"
          target: "${{ env.PHP_TARGET_PATH }}"

      - name: Deploy Java JAR via SCP
        if: contains(github.event.head_commit.message, '[java]')
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "${{ env.JAVA_PROJECT_DIR }}/build/libs/${{ env.JAVA_JAR_NAME }}"
          target: "${{ env.JAVA_TARGET_PATH }}"

      # 5. 서버에서 서비스 재시작
      # ----------------------------------------------------
      - name: Restart services on VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # PHP 배포 시 Apache 재시작
            if [[ "${{ github.event.head_commit.message }}" == *"[php]"* ]]; then
              echo "Restarting Apache server..."
              sudo systemctl restart apache2
            fi

            # Java 배포 시 systemd 서비스 재시작
            if [[ "${{ github.event.head_commit.message }}" == *"[java]"* ]]; then
              echo "Restarting Java application service (${{ env.JAVA_SERVICE_NAME }})..."
              sudo systemctl restart ${{ env.JAVA_SERVICE_NAME }}
            fi